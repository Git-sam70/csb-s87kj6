{"version":3,"sources":["Web3.js","App.js","index.js"],"names":["blockExplore","provider","ethers","providers","getDefaultProvider","utils","parseInt","BigNumber","getGasPrice","from","_hex","formatUnits","getBlockNumber","blockExObj","gasPrice","blockNumber","styles","container","backgroundColor","color","fontFamily","display","flexDirection","alignItems","inputContainer","margin","marginBottom","justifyContent","fontSize","inputLabel","width","textAlign","marginRight","input","height","padding","borderRadius","border","inputSuffix","marginLeft","result","marginTop","fontStyle","lineHeight","App","useState","buyPrice","setBuyPrice","feesPercent","setFeesPercent","gasCost","setGasCost","desiredProfit","setDesiredProfit","sellingPrice","setSellingPrice","ethPrice","setEthPrice","localPrice","setlocalPrice","setGasPrice","setBlockNumber","React","useEffect","Number","gasHandler","intervalId","setInterval","clearInterval","style","role","toFixed","type","value","onChange","event","target","placeholder","borderBottom","fontWeight","toLocaleString","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.0fffa765.chunk.js","sourcesContent":["import { ethers, utils } from \"ethers\";\r\n\r\nexport const blockExplore = async () => {\r\n  const provider = new ethers.providers.getDefaultProvider();\r\n  //await provider.send(\"eth_requestAccounts\", []);\r\n  //const signer = provider.getSigner();\r\n\r\n  //const contract = new ethers.Contract(contractAddress, abi, signer);\r\n  const blockExObj = {\r\n    gasPrice: utils.formatUnits(\r\n      parseInt(ethers.BigNumber.from(await provider.getGasPrice())._hex, 16),\r\n      \"gwei\"\r\n    ),\r\n    blockNumber: parseInt(\r\n      ethers.BigNumber.from(await provider.getBlockNumber())._hex,\r\n      16\r\n    )\r\n  };\r\n\r\n  return blockExObj;\r\n};\r\n","import React, { useState } from \"react\";\nimport { blockExplore } from \"./Web3\";\n\nconst App = () => {\n  const [buyPrice, setBuyPrice] = useState(0);\n  const [feesPercent, setFeesPercent] = useState(0);\n  const [gasCost, setGasCost] = useState(0);\n  const [desiredProfit, setDesiredProfit] = useState(0);\n  const [sellingPrice, setSellingPrice] = useState(0);\n  const [ethPrice, setEthPrice] = useState(1600);\n  const [localPrice, setlocalPrice] = useState(0);\n\n  // Block Ex\n  const [gasPrice, setGasPrice] = useState(0);\n  const [blockNumber, setBlockNumber] = useState(0);\n\n  const handleBuyPriceChange = (event) => {\n    setBuyPrice(event.target.value);\n  };\n\n  const handleFeesPercentChange = (event) => {\n    setFeesPercent(event.target.value);\n  };\n\n  const handleGasCostChange = (event) => {\n    setGasCost(event.target.value);\n  };\n\n  const handleDesiredProfitChange = (event) => {\n    setDesiredProfit(event.target.value);\n  };\n\n  const handleEthPriceChange = (event) => {\n    setEthPrice(event.target.value);\n  };\n\n  const handleLocalPriceChange = (event) => {\n    setlocalPrice(event.target.value);\n  };\n\n  React.useEffect(() => {\n    setSellingPrice(\n      (Number(buyPrice) + Number(desiredProfit) + Number(gasCost)) /\n        (1 - Number(feesPercent) / 100)\n    );\n\n    const gasHandler = async () => {\n      const { gasPrice, blockNumber } = await blockExplore();\n      setGasPrice(gasPrice);\n      setBlockNumber(blockNumber);\n    };\n\n    const intervalId = setInterval(gasHandler, 5000);\n    gasHandler();\n\n    return () => clearInterval(intervalId);\n  }, [buyPrice, desiredProfit, feesPercent, gasCost]);\n\n  return (\n    <div style={styles.container}>\n      <div style={{ marginTop: \"20px\" }}>\n        <h2>\n          <span role=\"img\" aria-label=\"gasemo\">\n            ðŸŸ¢ ðŸ’¨\n          </span>{\" \"}\n          Gas Price: {Number(gasPrice).toFixed(2)}\n        </h2>\n        <h2>\n          <span role=\"img\" aria-label=\"gasemo\">\n            ðŸŸ¢\n          </span>{\" \"}\n          Lstest Block: {blockNumber}\n        </h2>\n      </div>\n      <div\n        style={{\n          border: \"1px solid gray\",\n          borderRadius: \"3px\",\n          marginTop: \"50px\",\n          padding: \"25px\"\n        }}\n      >\n        <h1\n          style={{\n            //marginTop: \"100px\",\n            backgroundColor: \"blue\",\n            borderRadius: \"3px\",\n            padding: \"10px\",\n            textAlign: \"center\"\n          }}\n        >\n          Flipper Calculator\n        </h1>\n        <div style={styles.inputContainer}>\n          <div style={styles.inputLabel}>Buy Price:</div>\n          <input\n            type=\"number\"\n            value={buyPrice}\n            onChange={handleBuyPriceChange}\n            style={styles.input}\n            placeholder=\"0\"\n          />\n          <div style={styles.inputSuffix}>ETH</div>\n        </div>\n\n        <div style={styles.inputContainer}>\n          <div style={styles.inputLabel}>ETH Price:</div>\n          <input\n            type=\"number\"\n            value={ethPrice}\n            onChange={handleEthPriceChange}\n            style={styles.input}\n            placeholder=\"0\"\n          />\n          <div style={styles.inputSuffix}>$</div>\n        </div>\n\n        <div style={styles.inputContainer}>\n          <div style={styles.inputLabel}>Local Price:</div>\n          <input\n            type=\"number\"\n            value={localPrice}\n            onChange={handleLocalPriceChange}\n            style={styles.input}\n            placeholder=\"0\"\n          />\n          <div style={styles.inputSuffix}>T</div>\n        </div>\n\n        <div style={styles.inputContainer}>\n          <div style={styles.inputLabel}>Market Fees + Royalty %:</div>\n          <input\n            type=\"number\"\n            value={feesPercent}\n            onChange={handleFeesPercentChange}\n            style={styles.input}\n            placeholder=\"0\"\n          />\n          <div style={styles.inputSuffix}>%</div>\n        </div>\n        <div style={styles.inputContainer}>\n          <div style={styles.inputLabel}>Gas Costs:</div>\n          <input\n            type=\"number\"\n            value={gasCost}\n            onChange={handleGasCostChange}\n            style={styles.input}\n            placeholder=\"0\"\n          />\n          <div style={styles.inputSuffix}>ETH</div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            margin: 10,\n            marginBottom: \"50px\",\n            borderBottom: \"1px solid gray\",\n            padding: \"20px\"\n          }}\n        >\n          <div style={styles.inputLabel}>Desired Profit:</div>\n          <input\n            type=\"number\"\n            value={desiredProfit}\n            onChange={handleDesiredProfitChange}\n            style={styles.input}\n            placeholder=\"0\"\n          />\n          <div style={styles.inputSuffix}>ETH</div>\n        </div>\n        <div style={styles.result}>\n          <p>Total Spendings:</p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"gray\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {(Number(buyPrice) + Number(gasCost)).toFixed(4)} ETH\n          </p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"gray\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {((Number(buyPrice) + Number(gasCost)) * ethPrice).toLocaleString()}{\" \"}\n            $\n          </p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"gray\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {(\n              (Number(buyPrice) + Number(gasCost)) *\n              ethPrice *\n              localPrice\n            ).toLocaleString()}{\" \"}\n            T\n          </p>\n        </div>\n        <div style={styles.result}>\n          <p>Sell Price:</p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"gold\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {sellingPrice.toFixed(4)} ETH\n          </p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"gold\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {(sellingPrice * ethPrice).toLocaleString()} $\n          </p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"gold\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {(sellingPrice * ethPrice * localPrice).toLocaleString()} T\n          </p>\n        </div>\n        <div style={styles.result}>\n          <p>Profit:</p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"green\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {desiredProfit} ETH\n          </p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"green\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {(desiredProfit * ethPrice).toLocaleString()} $\n          </p>\n          <p\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n              backgroundColor: \"green\",\n              borderRadius: \"3px\",\n              padding: \"15px\"\n            }}\n          >\n            {(desiredProfit * ethPrice * localPrice).toLocaleString()} T\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: \"#1b1b1b\",\n    color: \"whitesmoke\",\n    fontFamily: \"monospace\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: 10,\n    marginBottom: \"20px\",\n    justifyContent: \"space-between\",\n    fontSize: \"15px\"\n  },\n  inputLabel: {\n    width: 120,\n    textAlign: \"right\",\n    marginRight: 10\n  },\n  input: {\n    width: 100,\n    height: 30,\n    padding: 6,\n    fontSize: \"15px\",\n    borderRadius: 3,\n    border: \"1px solid lightgray\",\n    backgroundColor: \"#1b1b1b\",\n    color: \"whitesmoke\"\n  },\n  inputSuffix: {\n    marginLeft: 10\n  },\n  result: {\n    marginTop: 0,\n    fontSize: 20,\n    fontStyle: \"bold\",\n    display: \"grid\",\n    flexDirection: \"cloumn\",\n    lineHeight: \"0px\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    textAlign: \"center\"\n  }\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}